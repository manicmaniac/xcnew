#!/bin/bash

# A utility script to dump Xcode private headers that are used in `xcnew`.
#
# This tool needs the following commands to be installed:
# See `Frameworks/.versions` to know which version of the tools are needed.
#
# - [Xcode](https://developer.apple.com/download/all/)
# - [clang-format](https://clang.llvm.org/docs/ClangFormat.html)
# - [class-dump](http://github.com/manicmaniac/class-dump)

set -e

contents_dir="$(dirname "${DEVELOPER_DIR:-$(xcode-select -p)}")"

# Dump necessary headers in DVTFoundation.framework.
class-dump -H \
           -C '^DVT(FilePath|FileSystemRepresentationProviding|Platform)$' \
           -o Frameworks/DVTFoundation.framework/Headers \
           "$contents_dir/SharedFrameworks/DVTFoundation.framework"

# Dump necessary headers in IDEFoundation.framework.
class-dump -H \
           -C '^IDETemplate(|Factory|InstantiationContext|Kind|Option|OptionParent)$' \
           -o Frameworks/IDEFoundation.framework/Headers \
           "$contents_dir/Frameworks/IDEFoundation.framework"

find Frameworks -type f -name '*.h' -exec sed -i '' -f /dev/fd/0 {} + <<-'EOF'
    # Remove C++ destructor declaration, which is not permitted in Objective-C class.
    /^- (void)\.cxx_destruct;$/d

    # Import Foundation.framework instead of importing individual headers.
    s/^#import <objc\/NSObject\.h>$/#import <Foundation\/Foundation.h>/
    /^#import "NS.*$/d

    # Use `NSUInteger` instead of an architecture-dependent type `unsigned long long`.
    s/unsigned long long hash;$/NSUInteger hash;/

    # Add an explicit ownership to avoid warnings.
    s/\(id \*_field2;\)$/__unsafe_unretained \1/
EOF

# Remove garbage.
sed -i '' -e '/#pragma mark Typedef/,$d' Frameworks/DVTFoundation.framework/Headers/CDStructures.h
sed -i '' -e '/#pragma mark Typedef/,$d' Frameworks/IDEFoundation.framework/Headers/CDStructures.h

# Add missing import for `CDStructures.h`
sed -i '' -e '/#import <Foundation\/Foundation\.h>/a\
#import <DVTFoundation/CDStructures.h>' Frameworks/DVTFoundation.framework/Headers/DVTFilePath.h
sed -i '' -e '/#import <Foundation\/Foundation\.h>/a\
#import <IDEFoundation/CDStructures.h>' Frameworks/IDEFoundation.framework/Headers/IDETemplate.h

# Add missing header `<os/lock.h>`
sed -i '' -e '/#import <Foundation\/Foundation\.h>/a\
#import <os/lock.h>' Frameworks/DVTFoundation.framework/Headers/DVTFilePath.h

# Manually add type of block which cannot be extracted with `class-dump`
sed -i '' -f /dev/fd/0 Frameworks/IDEFoundation.framework/Headers/IDETemplateFactory.h <<-'EOF'
    /#import <Foundation\/Foundation.h>/{
        G
        a\
        @class DVTFilePath;
    }
EOF

tops -scriptfile /dev/stdin <<-'EOF' Frameworks/DVTFoundation.framework/Headers/DVTFilePath.h
    replacemethod "filePathForFileURL:<arg1>" with same {
        replace "<arg1_type>" with "(NSURL *_Nonnull)"
        replace "<arg1_param>" with "url"
    }
    replacemethod "removeAssociatesWithRole:<arg1>" with same {
        replace "<arg1_type>" with "(NSString *_Nonnull)"
        replace "<arg1_param>" with "role"
    }
EOF

tops -scriptfile /dev/stdin <<-'EOF' Frameworks/DVTFoundation.framework/Headers/DVTPlatform.h
    replacemethod "loadAllPlatformsReturningError:<arg1>" with same {
        replace "<arg1_type>" with "(NSError *__unsafe_unretained _Nullable *)"
        replace "<arg1_param>" with "error"
    }
    replacemethod "platformForIdentifier:<arg1>" with same {
        replace "<arg1_type>" with "(NSString *_Nonnull)"
        replace "<arg1_param>" with "identifier"
    }
    replace "+ (id)allPlatforms" with "+ (nonnull NSArray<DVTPlatform *> *)allPlatforms"
EOF

tops -scriptfile /dev/stdin <<-'EOF' Frameworks/IDEFoundation.framework/Headers/IDETemplateKind.h
    replacemethod "templateKindForIdentifier:<arg1>" with same {
        replace "<arg1_type>" with "(NSString *_Nonnull)"
        replace "<arg1_param>" with "identifier"
    }
    replace "- (id)newTemplateInstantiationContext" with "- (nonnull IDETemplateInstantiationContext *)newTemplateInstantiationContext"
EOF

tops -scriptfile /dev/stdin <<-'EOF' Frameworks/IDEFoundation.framework/Headers/IDETemplateFactory.h
    replacemethod "instantiateTemplateForContext:<arg1>options:<arg2>whenDone:<arg3>" with same {
        replace "<arg1_type>" with "(IDETemplateInstantiationContext *_Nonnull)"
        replace "<arg1_param>" with "context"
        replace "<arg2_param>" with "options"
        replace "<arg3_type>" with "(void (^)(NSArray<DVTFilePath *> *filePaths, void *_unknown, NSError *error))"
        replace "<arg3_param>" with "whenDone"
    }
EOF

tops -scriptfile /dev/stdin <<-'EOF' Frameworks/IDEFoundation.framework/Headers/IDETemplate.h
    replace "+ (id)availableTemplatesOfTemplateKind" with "+ (nonnull NSArray<IDETemplate *> *)availableTemplatesOfTemplateKind"
    replacemethod "availableTemplatesOfTemplateKind:<arg1>" with same {
        replace "<arg1_type>" with "(IDETemplateKind *_Nonnull)"
        replace "<arg1_param>" with "kind"
    }
EOF

# Re-format all files.
find Frameworks -type f -name '*.h' -exec clang-format -i {} +

# To reproduce the result, tool versions are recorded.
(
    exec 2>&1
    set -x
    xcodebuild -version
    class-dump --version
    clang-format --version
) >Frameworks/.versions
